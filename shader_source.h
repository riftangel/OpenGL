// Shader source headerfile generated by glsl-to-header.py, written by Gerard Geer
#ifndef SHADER_SOURCE
#define SHADER_SOURCE

#define bg_tile_shader_vert "#version 120\n"   \
"attribute vec3 vertPos;\n"    \
"attribute vec2 vertUV;\n"     \
"uniform mat3 transform;\n"    \
"uniform float depth;\n"       \
"uniform int hFlip;\n" \
"uniform int vFlip;\n" \
"varying vec2 fragUV;\n"       \
"void main(void)\n"    \
"{\n"  \
"gl_Position = vec4( transform*vertPos, 1.0 );\n"      \
"gl_Position.z = depth;\n"     \
"fragUV = vertUV;\n"   \
"if( hFlip > 0 ) fragUV.x = 1.0-fragUV.x;\n"   \
"if( vFlip > 0 ) fragUV.y = 1.0-fragUV.y;\n"   \
"}\n"

#define bg_tile_shader_frag "#version 120\n"   \
"uniform sampler2D texture;\n" \
"varying vec2 fragUV;\n"       \
"void main(void)\n"    \
"{\n"  \
"gl_FragColor = texture2D(texture, fragUV);\n" \
"}\n"

#define scene_tile_shader_vert "#version 120\n"        \
"attribute vec3 vertPos;\n"    \
"attribute vec2 vertUV;\n"     \
"uniform mat3 transform;\n"    \
"uniform float depth;\n"       \
"uniform int hFlip;\n" \
"uniform int vFlip;\n" \
"varying vec2 fragUV;\n"       \
"void main(void)\n"    \
"{\n"  \
"gl_Position = vec4( transform*vertPos, 1.0 );\n"      \
"gl_Position.z = depth;\n"     \
"fragUV = vertUV;\n"   \
"if( hFlip > 0 ) fragUV.x = 1.0-fragUV.x;\n"   \
"if( vFlip > 0 ) fragUV.y = 1.0-fragUV.y;\n"   \
"}\n"

#define scene_tile_shader_frag "#version 120\n"        \
"uniform sampler2D texture;\n" \
"varying vec2 fragUV;\n"       \
"void main(void)\n"    \
"{\n"  \
"gl_FragColor = texture2D(texture, fragUV);\n" \
"}\n"

#define anim_tile_shader_vert "#ifndef ANIM_TILE_SHADER_VERT\n"        \
"#define ANIM_TILE_SHADER_VERT\n"      \
"#endif \n"

#define anim_tile_shader_frag "#version 120\n" \
"uniform sampler2D texture;\n" \
"varying vec2 fragUV;\n"       \
"void main(void)\n"    \
"{\n"  \
"gl_FragColor = texture2D(texture, fragUV);\n" \
"}\n"

#define final_pass_shader_vert "#version 120\n"        \
"attribute vec3 vertPos;\n"    \
"attribute vec2 vertUV;\n"     \
"varying vec2 fragUV;\n"       \
"void main(void)\n"    \
"{\n"  \
"gl_Position = vec4( vertPos.xy*2.0, 0.0, 1.0 );\n"    \
"gl_Position.y = -gl_Position.y;\n"    \
"fragUV = vertUV;\n"   \
"}\n"

#define final_pass_shader_frag "#version 120\n"        \
"varying vec2 fragUV;\n"       \
"uniform sampler2D fwdFB;\n"   \
"uniform sampler2D defFB;\n"   \
"void main(void)\n"    \
"{\n"  \
"vec4 fwd = texture2D(fwdFB, fragUV);\n"       \
"vec4 def = texture2D(defFB, fragUV);\n"       \
"gl_FragColor = vec4(mix(fwd.rgb, def.rgb, def.a), 1.0);\n"    \
"}\n"

#endif // SHADER_SOURCE
